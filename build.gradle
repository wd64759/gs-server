buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		maven {url 'http://maven.aliyun.com/nexus/content/groups/public'}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.netflix.nebula:gradle-ospackage-plugin:2.2.6"
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nebula.os-package'

group = 'com.leafmind.poc'
version = '1.0'
sourceCompatibility = 1.8

repositories {
	mavenLocal()
	maven {url 'http://maven.aliyun.com/nexus/content/groups/public'}
	mavenCentral()
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.projectlombok:lombok:1.18.0')
	annotationProcessor 'org.projectlombok:lombok:1.16.20'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.testng:testng:6.9.10')
}

ospackage {
	summary 'rpm for docker install testing'
	arch 'X86_64'
	os 'LINUX'
	type 'BINARY'
	user 'nobody'
	permissionGroup 'nobody'
	from(jar.getPath()) {
		into "/opt/gsp.oc"
	}
}

buildRpm {
	directory("/opt/gsp.oc", 0755)
	link("/opt/gsp.oc/default", "/opt/gsp.oc/gs-server")
	postInstall("chmod +x /opt/gsp.oc/default/scripts/*; rm -rf /data/gsp.oc/logs/*;")
}
